{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","completed","id","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","todosListWithUsers","generateId","sort","prevTodo","currTodo","App","useState","setTodos","setTitle","authorId","setAuthorId","isTitleError","setIsTitleError","isAuthorError","setIsAuthorError","action","method","onSubmit","event","preventDefault","prevTodos","type","value","onChange","target","replace","placeholder","htmlFor","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c364de3a.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo button is-link\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', 'message-body', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title block\">{title}</h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import classNames from 'classnames';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <ul>\n    {todos.map((todo) => (\n      <li\n        key={todo.id}\n        className={classNames('message', {\n          'is-primary': todo.completed,\n          'is-warning': !todo.completed,\n        })}\n      >\n        <TodoInfo todo={todo} />\n      </li>\n    ))}\n  </ul>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport 'bulma';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nconst getUser = (userId: number): User | null => {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n};\n\nexport const todosListWithUsers: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nconst generateId = (todos: Todo[]) => {\n  return [...todos].sort(\n    (prevTodo, currTodo) => currTodo.id - prevTodo.id,\n  )[0].id + 1;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosListWithUsers);\n  const [title, setTitle] = useState('');\n  const [authorId, setAuthorId] = useState(0);\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [isAuthorError, setIsAuthorError] = useState(false);\n\n  const clearForm = () => {\n    setTitle('');\n    setAuthorId(0);\n    setIsTitleError(false);\n    setIsAuthorError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title || authorId === 0) {\n      if (!title) {\n        setIsTitleError(true);\n      }\n\n      if (authorId === 0) {\n        setIsAuthorError(true);\n      }\n\n      return;\n    }\n\n    const todo: Todo = {\n      id: generateId(todos),\n      title,\n      completed: false,\n      userId: authorId,\n      user: getUser(authorId),\n    };\n\n    setTodos((prevTodos) => [...prevTodos, todo]);\n    clearForm();\n  };\n\n  const handleOnInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (isTitleError) {\n      setIsTitleError(false);\n    }\n\n    setTitle(event.target.value.replace(/[^a-zа-я0-9\\s]/gi, ''));\n  };\n\n  const handleOnSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (isAuthorError) {\n      setIsAuthorError(false);\n    }\n\n    setAuthorId(+event.target.value);\n  };\n\n  return (\n    <section className=\"App container section\">\n      <h1 className=\"App__title title is-1\">\n        Add todo form\n      </h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        className=\"mb-5\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\">\n            Write todo title\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                data-cy=\"titleInput\"\n                value={title}\n                className=\"input\"\n                onChange={handleOnInput}\n                placeholder=\"Todo title\"\n              />\n            </div>\n          </label>\n\n          {isTitleError && (\n            <p className=\"error help is-danger\">Please enter a title</p>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"select\">\n            Select author\n\n            <div className=\"control\">\n              <div className=\"select is-flex\">\n                <select\n                  data-cy=\"userSelect\"\n                  className=\"select container\"\n                  id=\"select\"\n                  onChange={handleOnSelect}\n                  value={authorId}\n                >\n                  <option value=\"0\" disabled>Choose a user</option>\n\n                  {usersFromServer.map(({ id, name }: User) => (\n                    <option value={id} key={id}>{name}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </label>\n\n          {isAuthorError && (\n            <p className=\"error help is-danger\">Please choose a user</p>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          className=\"button is-primary\"\n        >\n          Add\n        </button>\n      </form>\n\n      <div className=\"TodoList\">\n        <TodoList todos={todos} />\n      </div>\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}